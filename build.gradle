apply plugin: 'java'
apply from: "$rootDir/gradle/ext/coding-format.gradle"

group = 'org.ow2.proactive'
version = processTreeKillerVersion


buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "http://repository.activeeon.com/content/groups/proactive/"
        }
    }

    dependencies {
        classpath "com.diffplug.gradle.spotless:spotless:2.4.0"
        classpath "org.ow2.proactive:coding-rules:1.0.0"
        delete "gradle/ext"
        ant.unjar src: configurations.classpath.find { it.name.startsWith("coding-rules") }, dest: 'gradle/ext'
    }
}

repositories {
    mavenCentral()
    maven { url 'http://repository.activeeon.com/content/groups/proactive/' }
}

dependencies {
    compile 'commons-io:commons-io:2.14.0'
    compile 'net.java.dev.jna:jna:5.13.0'
    compile 'org.jvnet.winp:winp:1.28-proactive'

    testCompile 'com.jayway.awaitility:awaitility:1.6.3'
    testCompile 'junit:junit:4.12'
}

apply plugin: 'maven'

uploadArchives {
    repositories {
        mavenDeployer {
            snapshotRepository(url: "http://repository.activeeon.com/content/repositories/snapshots/") {
                authentication(userName: "${System.getProperty('nexusUsername')}",
                        password: "${System.getProperty('nexusPassword')}")
            }
            repository(url: "http://repository.activeeon.com/content/repositories/releases/") {
                authentication(userName: "${System.getProperty('nexusUsername')}",
                        password: "${System.getProperty('nexusPassword')}")
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3' //version required
}
